# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu' # 'zulu'
        java-version: 21
    - name: Build JRE
      run: |
        jlink --no-header-files --no-man-pages --compress=2 --strip-debug --add-modules java.base,java.datatransfer,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.attach,jdk.charsets,jdk.compiler,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.editpad,jdk.hotspot.agent,jdk.httpserver,jdk.internal.ed,jdk.internal.jvmstat,jdk.internal.le,jdk.internal.opt,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jartool,jdk.javadoc,jdk.jcmd,jdk.jconsole,jdk.jdeps,jdk.jdi,jdk.jdwp.agent,jdk.jfr,jdk.jlink,jdk.jshell,jdk.jsobject,jdk.jstatd,jdk.localedata,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.dom,jdk.zipfs --output jre
        tar cvzf jre.tar.gz jre/
        pwd
        ls
    - name: Copy Artifacts
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.WORKOUT_HOST }}
        username: ${{ secrets.WORKOUT_USERNAME }}
        password: ${{ secrets.WORKOUT_PASSWORD }}
        source: "./jre.tar.gz"
        target: ${{ secrets.WORKOUT_PLATFORM_DIR }}
        strip_components: 1
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.WORKOUT_HOST }}
        username: ${{ secrets.WORKOUT_USERNAME }}
        password: ${{ secrets.WORKOUT_PASSWORD }}
        target: ${{ secrets.WORKOUT_PLATFORM_DIR }}
        script:
          cd ${{ secrets.WORKOUT_PLATFORM_DIR }} && rm -rf jre jre && tar xvf jre.tar.gz jre && rm jre.tar.gz && cd ~/foundation/ && sh deploy.sh
